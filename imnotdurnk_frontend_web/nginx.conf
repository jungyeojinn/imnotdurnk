http {

    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    server {
		listen 80;
		listen [::]:80;
		server_name imnotdurnk.duckdns.org;
		
		# HTTP에서 HTTPS로 리디렉션
		location / {
			return 301 https://$host$request_uri;
		}
    }

    server {
        listen 443 ssl;
        listen [::]:443 ssl;
        server_name  imnotdurnk.duckdns.org;
        
            root   /usr/share/nginx/html;
            index  index.html index.htm;
            
            # SSL 설정
            ssl_certificate /etc/letsencrypt/live/imnotdurnk.duckdns.org/fullchain.pem;
            ssl_certificate_key /etc/letsencrypt/live/imnotdurnk.duckdns.org/privkey.pem;
            ssl_protocols TLSv1.2 TLSv1.3;
            ssl_prefer_server_ciphers on;

        location / {
            # SPA 새로고침 처리
            try_files $uri $uri/ /index.html =404;
        }

        location /api/ {
            proxy_pass http://imnotdurnk-backend:8080/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # CORS 설정
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'Origin, Authorization, Accept, Content-Type, X-Requested-With';
            
            # wss(web-socket) 설정
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";

            # OPTIONS 메소드에 대한 프리플라이트 요청 처리
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'Origin, Authorization, Accept, Content-Type, X-Requested-With';
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain charset=UTF-8';
                add_header 'Content-Length' 0;
                return 204;
            }
        }

    #    error_page   500 502 503 504  /50x.html;
    #    location = /50x.html {
    #        root   /usr/share/nginx/html;
    #    }
    }

    server {
            listen 80;
            listen [::]:80;
            server_name i11a609.p.ssafy.io;
            
            # HTTP에서 HTTPS로 리디렉션
            location / {
                return 301 https://$host$request_uri;
            }
    }

    server {
        listen 443 ssl;
        listen [::]:443 ssl;
        server_name  i11a609.p.ssafy.io;
        
            root   /usr/share/nginx/html;
            index  index.html index.htm;
            
            # SSL 설정
            ssl_certificate /etc/letsencrypt/live/i11a609.p.ssafy.io/fullchain.pem;
            ssl_certificate_key /etc/letsencrypt/live/i11a609.p.ssafy.io/privkey.pem;
            ssl_protocols TLSv1.2 TLSv1.3;
            ssl_prefer_server_ciphers on;

        location / {
            # SPA 새로고침 처리
            try_files $uri $uri/ /index.html =404;
        }

        location /api/ {
            proxy_pass http://imnotdurnk-backend:8080/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # CORS 설정
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'Origin, Authorization, Accept, Content-Type, X-Requested-With';
            
            # wss(web-socket) 설정
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";

            # OPTIONS 메소드에 대한 프리플라이트 요청 처리
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'Origin, Authorization, Accept, Content-Type, X-Requested-With';
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain charset=UTF-8';
                add_header 'Content-Length' 0;
                return 204;
            }
        }

    #    error_page   500 502 503 504  /50x.html;
    #    location = /50x.html {
    #        root   /usr/share/nginx/html;
    #    }
    }
}
